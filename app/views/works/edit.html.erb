<div class="works-main-container">
  <div class="works-main-left">
    <%= form_with(model: @work, local: true) do |f| %>
      <div style="margin-bottom: 16px;">
        <label style="font-weight: bold; font-size: 1rem;">タイトル</label><br>
        <%= f.text_field :title, style: 'width: 60%; font-size: 1.1rem; padding: 4px 8px; margin-top: 4px;' %>
      </div>
      <div style="margin-bottom: 8px; display: flex; gap: 12px;">
        <button type="button" class="insert-btn" data-insert="「」">「」</button>
        <button type="button" class="insert-btn" data-insert="……">……</button>
        <button type="button" class="insert-btn" data-insert="——">——</button>
        <button type="button" class="insert-btn" data-insert="　">␣</button>
        <button type="button" class="insert-btn" data-insert="[newpage]">page</button>
        <button type="button" class="insert-btn" data-insert="[[rb: > ]]">ルビ</button>
        <button type="button" class="insert-btn" data-insert="[[NAME:>]]">名前</button>
      </div>
      <div style="flex: 1; margin-bottom: 24px;">
        <%= f.text_area :body, rows: 18, id: 'work_body', style: 'width: 100%; font-size: 14px; font-weight: normal; font-family: "游明朝", "Yu Mincho", "ヒラギノ明朝 ProN W3", "Hiragino Mincho ProN", "MS P明朝", "MS Mincho", serif; padding: 8px; resize: vertical; min-height: 350px; background: #eee; border: 1px solid #aaa;' %>
      </div>
      <div style="display: flex; gap: 12px; align-items: center;">
        <%= f.submit '保存して作品詳細ページへ', style: 'border: 2px solid #222; border-radius: 6px; padding: 6px 18px; font-size: 1rem; font-weight: bold; background: #fff; color: #222; text-decoration: none; transition: background 0.2s;' %>
      </div>
    <% end %>
    <div style="display: flex; gap: 12px; align-items: center; margin-top: 12px;">
      <button type="button" id="copy-btn" style="border: 2px solid #aaa; border-radius: 6px; padding: 6px 18px; font-size: 1rem; background: #f8f8f8; color: #555;">本文をコピー</button>
      <span id="copy-message" style="color: #228b22; font-weight: bold; display: none; margin-left: 10px;"></span>
    </div>
  </div>
  <div class="works-main-right">
    <!-- YouTubeプレイヤー関連（右下） -->
    <div style="display: flex; flex-direction: column; gap: 12px;">
      <!-- YouTubeプレイヤー（16:9比率維持） -->
      <div style="position: relative; width: 100%; padding-top: 56.25%; background: #222;">
        <iframe id="youtube-player" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" src="" frameborder="0" allowfullscreen></iframe>
      </div>
      <!-- YouTube動画ID/URL入力欄（検索窓の下に移動） -->
      <div style="margin-top: 8px;">
        <label style="font-weight: bold;">YouTube動画IDまたはURL</label><br>
        <input type="text" id="youtube-input" style="width: 80%; padding: 4px 8px; font-size: 1rem;" placeholder="YouTube動画IDまたはURL">
        <button type="button" id="youtube-play-btn" style="margin-left: 8px; padding: 4px 12px;">動画を再生</button>
      </div>
    </div>
  </div>
</div>

<script>
  function handleCopyClick(e) {
    e.preventDefault();
    const textarea = document.getElementById('work_body');
    if (!textarea) return;
    navigator.clipboard.writeText(textarea.value).then(function() {
      const msg = document.getElementById('copy-message');
      msg.textContent = 'コピーしました！';
      msg.style.display = 'inline';
      setTimeout(() => { msg.style.display = 'none'; }, 2000);
    }, function() {
      const msg = document.getElementById('copy-message');
      msg.textContent = 'コピーに失敗しました';
      msg.style.display = 'inline';
      setTimeout(() => { msg.style.display = 'none'; }, 2000);
    });
  }
  function handleInsertClick(e) {
    e.preventDefault();
    const textarea = document.getElementById('work_body');
    if (!textarea) return;
    const insertText = e.currentTarget.dataset.insert;
    const start = textarea.selectionStart;
    const end = textarea.selectionEnd;
    const value = textarea.value;
    textarea.value = value.slice(0, start) + insertText + value.slice(end);
    textarea.focus();
    const cursorPos = start + insertText.length;
    textarea.setSelectionRange(cursorPos, cursorPos);
  }
  document.addEventListener('turbo:load', function() {
    console.log('turbo:load fired');
    const textarea = document.getElementById('work_body');
    console.log('textarea:', textarea);
    const btns = document.querySelectorAll('.insert-btn');
    console.log('insert-btn count:', btns.length);
    btns.forEach(function(btn) {
      btn.removeEventListener('click', handleInsertClick);
      btn.addEventListener('click', handleInsertClick);
    });
    const copyBtn = document.getElementById('copy-btn');
    if (copyBtn) copyBtn.addEventListener('click', handleCopyClick);
  });
  document.addEventListener('turbo:before-cache', function() {
    document.querySelectorAll('.insert-btn').forEach(function(btn) {
      btn.removeEventListener('click', handleInsertClick);
    });
    const copyBtn = document.getElementById('copy-btn');
    if (copyBtn) copyBtn.removeEventListener('click', handleCopyClick);
  });
</script>

<style>
  .insert-btn {
    background: none;
    border: none;
    font-size: 1.1rem;
    font-weight: bold;
    cursor: pointer;
    padding: 2px 8px;
    color: #222;
  }
  .insert-btn:active {
    color: #20b2aa;
  }
</style> 